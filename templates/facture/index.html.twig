{% extends 'base.html.twig' %}

{% block title %}Facture index{% endblock %}

{% block body %}


<div class=" col-10 mx-auto">

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>N°</th>
                <th>Client</th>
                <th>Prestation</th>
                <th>Total</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
            {% for facture in factures %}
            <tr>
                <td>{{ facture.date ? facture.mois|date('Y-m M') : '' }}</td>
                <td>{{facture.date|date('Ym')}}{{facture.client.abbr}}</td>
                <td>{{ facture.client.entreprise }}</td>
                <td>{{ facture.prestation }}</td>
                <td>{{ (facture.quantite * facture.taux)|round(2, 'common') }} €</td>
                <td>
                    <a class="btn btn-light" href="{{ path('facture_pdf', {'id': facture.id}) }}">pdf</a>
                    <a class="btn btn-light" href="{{ path('facture_show', {'id': facture.id}) }}">show</a>

                </td>
            </tr>
            {% else %}
            <tr>
                <td colspan="7">Aucun résultat</td>
            </tr>
            {% endfor %}
        </tbody>
        <tfoot>
            <tr>
                <th>Total:</th>
                <th colspan="3"></th>
                <th colspan="2"></th>
            </tr>
        </tfoot>
    </table>
</div>
{% endblock %}

{% block javascripts %}
<script>
    $(document).ready(function () {
        $('table').DataTable({
            "order": [[0, 'desc']],
         // dom: 'Bfrtip',
         // buttons: [
         // {
         //     extend: 'pdf',
         //     text: 'Télécharger',
         //     exportOptions: {
         //         modifier: {
         //             page: 'current'
         //         },
         //         columns: [ 0, 1, 2, 3,4 ]
         //     },
         //     footer:true
         // }
         // ],
            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\€,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };
                total = api
                .column( 4 )
                .data()
                .reduce( function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0 );
                pageTotal = api
                    .column(4, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(4).footer()).html(
                    pageTotal.toFixed(2) + " €"//+" ("+total+" € Total)"
                );
            }
        });
    });
</script>
{% endblock %}